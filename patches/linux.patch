# ath
# ===

--- drivers/net/wireless/ath/Makefile
+++ drivers/net/wireless/ath/Makefile
@@ -22,3 +22,9 @@
 ath-$(CONFIG_ATH_TRACEPOINTS) += trace.o

 CFLAGS_trace.o := -I$(src)
+
+all:
+	$(MAKE) -C /lib/modules/$(shell uname -r)/build M=$(shell pwd) modules
+
+clean:
+	$(MAKE) -C /lib/modules/$(shell uname -r)/build M=$(shell pwd) clean

--- drivers/net/wireless/ath/regd.c
+++ drivers/net/wireless/ath/regd.c
@@ -45,9 +45,9 @@ static int __ath_regd_init(struct ath_regulatory *reg);
 /* We allow IBSS on these on a case by case basis by regulatory domain */
 #define ATH_5GHZ_5150_5350	REG_RULE(5150-10, 5350+10, 80, 0, 30,\
 					 NL80211_RRF_NO_IR)
-#define ATH_5GHZ_5470_5850	REG_RULE(5470-10, 5850+10, 80, 0, 30,\
+#define ATH_5GHZ_5470_5925	REG_RULE(5470-10, 5925+10, 80, 0, 30,\
 					 NL80211_RRF_NO_IR)
-#define ATH_5GHZ_5725_5850	REG_RULE(5725-10, 5850+10, 80, 0, 30,\
+#define ATH_5GHZ_5725_5925	REG_RULE(5725-10, 5925+10, 80, 0, 30,\
 					 NL80211_RRF_NO_IR)
 
 #define ATH_2GHZ_ALL		ATH_2GHZ_CH01_11, \
@@ -55,11 +55,11 @@ static int __ath_regd_init(struct ath_regulatory *reg);
 				ATH_2GHZ_CH14
 
 #define ATH_5GHZ_ALL		ATH_5GHZ_5150_5350, \
-				ATH_5GHZ_5470_5850
+				ATH_5GHZ_5470_5925
 
 /* This one skips what we call "mid band" */
 #define ATH_5GHZ_NO_MIDBAND	ATH_5GHZ_5150_5350, \
-				ATH_5GHZ_5725_5850
+				ATH_5GHZ_5725_5925
 
 /* Can be used for:
  * 0x60, 0x61, 0x62 */

#--- drivers/net/wireless/ath/regd.c
#+++ drivers/net/wireless/ath/regd.c
#@@ -639,8 +639,7 @@
# 	const struct ieee80211_regdomain *regd;
# 
# 	wiphy->reg_notifier = reg_notifier;
#-	wiphy->regulatory_flags |= REGULATORY_STRICT_REG |
#-				   REGULATORY_CUSTOM_REG;
#+	wiphy->regulatory_flags |= REGULATORY_CUSTOM_REG;
# 
# 	if (ath_is_world_regd(reg)) {
# 		/*
#@@ -660,7 +659,7 @@
# 
# 	wiphy_apply_custom_regulatory(wiphy, regd);
# 	ath_reg_apply_radar_flags(wiphy, reg);
#-	ath_reg_apply_world_flags(wiphy, NL80211_REGDOM_SET_BY_DRIVER, reg);
#+	ath_reg_apply_world_flags(wiphy, NL80211_REGDOM_SET_BY_USER, reg);
# 	return 0;
# }

# ath9k
# =====

--- drivers/net/wireless/ath/ath9k/Makefile
+++ drivers/net/wireless/ath/ath9k/Makefile
@@ -79,3 +79,9 @@ ath9k_htc-y +=	htc_hst.o \
 obj-$(CONFIG_ATH9K_HTC) += ath9k_htc.o

 obj-$(CONFIG_ATH9K_PCI_NO_EEPROM) += ath9k_pci_owl_loader.o
+
+all:
+	$(MAKE) -C /lib/modules/$(shell uname -r)/build M=$(shell pwd) modules
+
+clean:
+	$(MAKE) -C /lib/modules/$(shell uname -r)/build M=$(shell pwd) clean

--- drivers/net/wireless/ath/ath9k/ani.c
+++ drivers/net/wireless/ath/ath9k/ani.c
@@ -326,6 +326,7 @@
 
 	if (is_scanning ||
 	    (ah->opmode != NL80211_IFTYPE_STATION &&
+	     ah->opmode != NL80211_IFTYPE_OCB &&
 	     ah->opmode != NL80211_IFTYPE_ADHOC)) {
 		/*
 		 * If we're scanning or in AP mode, the defaults (ini)
     
--- drivers/net/wireless/ath/ath9k/common-init.c
+++ drivers/net/wireless/ath/ath9k/common-init.c
@@ -86,6 +86,26 @@
 	CHAN5G(5785, 35), /* Channel 157 */
 	CHAN5G(5805, 36), /* Channel 161 */
 	CHAN5G(5825, 37), /* Channel 165 */
+
+	CHAN5G(5850, 38), /* Channel 170 */
+	/* ITA-G5B */
+	CHAN5G(5855, 39), /* Channel 171 */
+	CHAN5G(5860, 40), /* Channel 172 */
+	CHAN5G(5865, 41), /* Channel 173 */
+	CHAN5G(5870, 42), /* Channel 174 */
+	/* ITS-G5A */
+	CHAN5G(5875, 43), /* Channel 175 */
+	CHAN5G(5880, 44), /* Channel 176 */
+	CHAN5G(5885, 45), /* Channel 177 */
+	CHAN5G(5890, 46), /* Channel 178 */
+	CHAN5G(5895, 47), /* Channel 179 */
+	CHAN5G(5900, 48), /* Channel 180 */
+	CHAN5G(5905, 49), /* Channel 181 */
+	/* ITS-G5D */
+	CHAN5G(5910, 50), /* Channel 182 */
+	CHAN5G(5915, 51), /* Channel 183 */
+	CHAN5G(5920, 52), /* Channel 184 */
+	CHAN5G(5925, 53), /* Channel 185 */
 };
 
 /* Atheros hardware rate code addition for short preamble */

--- drivers/net/wireless/ath/ath9k/hw.h
+++ drivers/net/wireless/ath/ath9k/hw.h
@@ -73,7 +73,7 @@
 
 #define ATH9K_RSSI_BAD			-128
 
-#define ATH9K_NUM_CHANNELS	38
+#define ATH9K_NUM_CHANNELS	54
 
 /* Register read/write primitives */
 #define REG_WRITE(_ah, _reg, _val) \
